dnl ==================================================
dnl Versioning
dnl ==========
dnl
dnl CURRENT    The most recent interface number that this library implements.
dnl
dnl REVISION   The implementation number of the current interface.
dnl
dnl AGE        The difference between the newest and oldest interfaces that this
dnl            library implements.
dnl            In other words, the library implements all the interface numbers
dnl            in the range from number 'CURRENT - AGE' to 'CURRENT'.
dnl
dnl 1) Start with version information of `0:0:0' for each libtool library.
dnl
dnl 2) Update the version information only immediately before a public release
dnl    of your software. More frequent updates are unnecessary, and only guarantee
dnl    that the current interface number gets larger faster.
dnl
dnl 3) If the library source code has changed at all since the last update,
dnl    then increment revision (`c:r:a' becomes `c:r+1:a').
dnl
dnl 4) If any interfaces have been added, removed, or changed since the last
dnl    update, increment current, and set revision to 0.
dnl
dnl 5) If any interfaces have been added since the last public release, then
dnl    increment age.
dnl
dnl 6) If any interfaces have been removed since the last public release, then
dnl    set age to 0.
dnl
dnl ==================================================


dnl !!! Next time LIBZYPP_CURRENT is INCREMENTED, change
dnl     configure.ac:
dnl
dnl - AC_INIT([zypp], [LIBZYPP_CURRENT.LIBZYPP_REVISION.LIBZYPP_AGE])
dnl + AC_INIT([zypp], [LIBZYPP_CURRENT.LIBZYPP_AGE.LIBZYPP_REVISION])
dnl

m4_define([LIBZYPP_CURRENT], 	[1])
m4_define([LIBZYPP_REVISION],	[2])
m4_define([LIBZYPP_AGE],	[0])
dnl ==================================================
